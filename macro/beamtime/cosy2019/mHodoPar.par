##############################################################################
# Class:   CbmCosy2019HodoPar
# Context: For mHODO testing
##############################################################################
[CbmCosy2019HodoPar]
//----------------------------------------------------------------------------
// Total number of STS modules in the setup
NbModules: Int_t 2
// STS address for the first strip of each module
// 1 Line per ladder, from above beam to under beam
ModAddress: Int_t \
  0x10008002  0x10008022
// Offset of module center in X, in mm (Should be done by geometry for the unpacker!)
ModCenterPosX: Double_t \
         0.0         0.0
// Offset of module center in Y, in mm (Should be done by geometry for the unpacker!)
ModCenterPosY: Double_t \
         0.0         0.0
// Flag telling if X and Y axis should be swapped
ModSwapXY: Int_t \
         0           0
// Flag telling if channels on X axis should be inverted (original axis, not swapped one!)
ModInvertX: Int_t \
         0           0
// Flag telling if channels on Y axis should be inverted (original axis, not swapped one!)
ModInvertY: Int_t \
         0           0
// Total number of STS DPBs in system
NrOfDpbs: Int_t 1
// Array to hold the unique IDs (equipment ID) for all STS DPBs, Array size has to match NrOfDpbs
DbpIdArray: Int_t \
  0x4efb
// Array to hold the active flag for all CROBs, [ NbDpb * kuNbCrobPerDpb ] = [ NbDpb * 1 ]
CrobActiveFlag: Int_t \
  1
// Index of the STS module for each FEB, [ NbDpb * kuNbCrobPerDpb * kuNbFebsPerCrob ] = = [ NbDpb * 1 * 6 ], -1 if inactive
FebModuleIdx: Int_t \
 -1  0  1 -1 -1 -1
// ADC Gain in e-/ADC bin for each FEB, [ NbDpb * kuNbCrobPerDpb * kuNbFebsPerCrob ]
FebAdcGain: Double_t \
     0.0     1.0     1.0     0.0  2100.0  2000.0
// Base at Cal. Thr. in e- for each FEB, [ NbDpb * kuNbCrobPerDpb * kuNbFebsPerCrob ]
FebAdcBase: Double_t \
     0.0     0.0     0.0     0.0  2100.0  2000.0
// Thr. step in e-/Thr. Unit for each FEB, [ NbDpb * kuNbCrobPerDpb * kuNbFebsPerCrob ]
FebAdcThrGain: Double_t \
     0.0     1.0     1.0     0.0  2310.0  2310.0
// Thr. offset in Units vs Cal. Thr. for each FEB, [ NbDpb * kuNbCrobPerDpb * kuNbFebsPerCrob ]
FebAdcThrOffs: Int_t \
     0       0       0       0       0       0
#######################
